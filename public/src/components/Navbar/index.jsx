import React, { useState, useEffect, useRef } from 'react';
import './navbar.scss';
import { NavLink } from "react-router-dom";
import Menu from '../OverlayMenu';
import { TimelineMax, CSSPlugin } from 'gsap';

const Navbar = () => {
  const [ checked, checkbox ] = useState(false);
  let logo = useRef(null);

  const _toggleCheckbox = (e) => {
    checkbox(!checked);
  }
  const getRandom = (min, max) => {
    return Math.random() * (max - min) + min;
  }
  useEffect(() => {
    let paths = logo.children;
    
    CSSPlugin.useSVGTransformAttr = true;
    
    let tl = new TimelineMax({yoyo:true}),
        path = 'svg *',
        stagger_val = 0.0125,
        duration = 0.75;
    let stagger_opts_to = {
      x: 0,
      y: 0,
      delay: .5,
      opacity: 1,
      scale: 1,
      rotation: 0,
      ease: Power4.easeInOut,
    }; 
    for (let path of paths) {
      tl.set(path, {
        x: '+=' + getRandom(-500, 500),
        y: '+=' + getRandom(-500, 500),
        rotation: '+=' + getRandom(-720, 720),
        scale: 0,
        opacity: 0,
      });
    }
    tl.staggerTo(path, duration, stagger_opts_to, stagger_val);
    
  })

  return(
    <div className="navbar" >
      <div className="navbar__container">
        <NavLink to="/" className="logo__button">
          <svg viewBox="300 280 300 50" width="180" height="30" space="preserve" overflow="visible" className="logo" ref={element => logo = element}>
            <path d="M321.15,291.4l-1.78,4,3.85-3.21Z" transform="translate(-305.28 -284.37)"/>
            <path d="M308,327h7.22l3.48-8.41-1.56-1.3C314.07,320.55,311.12,323.92,308,327Z" transform="translate(-305.28 -284.37)"/>
            <path d="M305.28,327H308c3.1-3.08,6.05-6.45,9.14-9.71-1.84-1.53-3.66-3.08-5.48-4.66Z" transform="translate(-305.28 -284.37)"/>
            <path d="M324,310.7h-1.94l2-4.93q-4.33-.79-8.63-1.68l-3.81,8.54c1.82,1.58,3.64,3.13,5.48,4.66A83.69,83.69,0,0,1,324,310.7Z" transform="translate(-305.28 -284.37)"/>
            <path d="M334,307.4l1.37,3.3H324a83.69,83.69,0,0,0-6.86,6.59l1.56,1.3L319,318h12.21q4-4.86,7.79-9.91C337.31,307.87,335.67,307.64,334,307.4Z" transform="translate(-305.28 -284.37)"/>
            <path d="M344.21,308.73c-1.75-.19-3.5-.41-5.25-.64q-3.75,5-7.79,9.91h7.29l3.72,9h10.2Z" transform="translate(-305.28 -284.37)"/>
            <path d="M339.53,298.28c-5.43-2.17-10.87-4-16.31-6.1l-3.85,3.21-3.88,8.7q4.29.89,8.63,1.68l4.62-11.15L334,307.4c1.64.24,3.28.47,4.93.69,1-1.4,2.06-2.82,3.07-4.23Z" transform="translate(-305.28 -284.37)"/>
            <path d="M342,303.86c-1,1.41-2,2.83-3.07,4.23,1.75.23,3.5.45,5.25.64Z" transform="translate(-305.28 -284.37)"/><path d="M324,285l-2.85,6.4,2.07.78c3-2.52,6-5,9.17-7.18Z" transform="translate(-305.28 -284.37)"/>
            <path d="M333.6,285h-1.21c-3.14,2.21-6.15,4.66-9.17,7.18,5.44,2.05,10.88,3.93,16.31,6.1Z" transform="translate(-305.28 -284.37)"/><path d="M378.71,293.31a26.92,26.92,0,0,1,4.87,2.15l3-7.38a21.24,21.24,0,0,0-2.37-1.25Q381.29,290,378.71,293.31Z" transform="translate(-305.28 -284.37)"/>
            <path d="M373.59,284.41c1,2.78,2.07,5.56,3.13,8.33.66.16,1.32.35,2,.57q2.58-3.36,5.5-6.48A29.6,29.6,0,0,0,373.59,284.41Z" transform="translate(-305.28 -284.37)"/>
            <path d="M363.76,319q-1.41,3-2.76,6,1.35-3,2.76-6a23,23,0,0,1-7-3.34l-3.3,7.32c3.72,2.88,10.44,4.86,17.1,4.86a28.82,28.82,0,0,0,6-.58,99.2,99.2,0,0,1-9.84-7.58A26.66,26.66,0,0,1,363.76,319Z" transform="translate(-305.28 -284.37)"/>
            <path d="M386.68,320.88c-1.61-5.49-3.48-10.88-5.45-16.22a49.15,49.15,0,0,0-8.58-2.49c-1.53,2.49-3,5-4.35,7.65,5.45,1.29,10.42,2.14,10.42,5.68,0,2.58-2.34,4.5-8.1,4.5a22.6,22.6,0,0,1-3.92-.36,99.2,99.2,0,0,0,9.84,7.58C381.46,326.19,384.83,323.87,386.68,320.88Z" transform="translate(-305.28 -284.37)"/>
            <path d="M364,297a3.84,3.84,0,0,1,.77-2.37c-2.89-1.15-5.78-2.32-8.67-3.43a11.68,11.68,0,0,0-1.76,6.28c0,5.3,2.81,8.17,6.52,10,3.07-1.93,6-4.07,9-5.92C366.45,300.57,364,299.43,364,297Z" transform="translate(-305.28 -284.37)"/>
            <path d="M360.82,307.4a37,37,0,0,0,7.48,2.42c1.38-2.61,2.82-5.16,4.35-7.65-1-.23-1.93-.45-2.82-.69C366.8,303.33,363.89,305.47,360.82,307.4Z" transform="translate(-305.28 -284.37)"/><path d="M371.94,292.17a21.06,21.06,0,0,1,4.78.57c-1.06-2.77-2.11-5.55-3.13-8.33-.53,0-1.06,0-1.59,0-8.15,0-13.42,2.77-15.94,6.79,2.89,1.11,5.78,2.28,8.67,3.43C365.8,293.14,368.07,292.17,371.94,292.17Z" transform="translate(-305.28 -284.37)"/>
            <path d="M381.23,304.66c2,5.34,3.84,10.73,5.45,16.22a11.5,11.5,0,0,0,1.7-6.1C388.38,309.27,385.24,306.41,381.23,304.66Z" transform="translate(-305.28 -284.37)"/><path d="M414.49,284.38A23.72,23.72,0,0,0,400.63,289c1.6,2.38,3.18,4.79,4.71,7.22A115.23,115.23,0,0,1,414.49,284.38Z" transform="translate(-305.28 -284.37)"/>
            <path d="M405.34,296.26c-1.53-2.43-3.11-4.84-4.71-7.22a20.5,20.5,0,0,0-6.08,7.4l10.16.81C404.93,296.92,405.13,296.59,405.34,296.26Z" transform="translate(-305.28 -284.37)"/><path d="M394.55,296.44a22.8,22.8,0,0,0,0,19.33,131.94,131.94,0,0,1,10.16-18.52Z" transform="translate(-305.28 -284.37)"/>
            <path d="M426.24,297.56l6.24-5.76a20.19,20.19,0,0,0-11-6.71c-1.49,2.5-2.93,5.05-4.32,7.63A13.51,13.51,0,0,1,426.24,297.56Z" transform="translate(-305.28 -284.37)"/>
            <path d="M415.68,292.65a14.39,14.39,0,0,1,1.48.07c1.39-2.58,2.83-5.13,4.32-7.63a26.5,26.5,0,0,0-6.28-.72h-.71a115.23,115.23,0,0,0-9.15,11.88l.32.52A13.34,13.34,0,0,1,415.68,292.65Z" transform="translate(-305.28 -284.37)"/>
            <path d="M426.24,314.54a13.45,13.45,0,0,1-8.11,4.76q1.81,3.82,3.45,7.75a20,20,0,0,0,10.9-6.75Z" transform="translate(-305.28 -284.37)"/><path d="M405.66,296.78l-.32-.52c-.21.33-.41.66-.63,1l.53,0C405.38,297.12,405.51,296.94,405.66,296.78Z" transform="translate(-305.28 -284.37)"/><path d="M405.24,297.29l-.53,0a131.94,131.94,0,0,0-10.16,18.52,20.43,20.43,0,0,0,6.46,7.67c1.57-2.71,3.06-5.45,4.52-8.2a14.39,14.39,0,0,1-.29-17.95Z" transform="translate(-305.28 -284.37)"/><path d="M415.68,319.52a13.29,13.29,0,0,1-10.15-4.28c-1.46,2.75-2.95,5.49-4.52,8.2a23.86,23.86,0,0,0,14.13,4.36,26.69,26.69,0,0,0,6.44-.75q-1.63-3.93-3.45-7.75A14,14,0,0,1,415.68,319.52Z" transform="translate(-305.28 -284.37)"/><path d="M460.16,292.88q1.56-3.87,3-7.8H446.5q2.4,3.87,4.73,7.8Z" transform="translate(-305.28 -284.37)"/><path d="M446.5,285.08H439v14.86l9.66.74v-7.8h2.55Q448.91,289,446.5,285.08Z" transform="translate(-305.28 -284.37)"/><path d="M470.76,285.08h-7.58q-1.46,3.93-3,7.8h10.6Z" transform="translate(-305.28 -284.37)"/><path d="M468.18,302h-2.05l2.05.16Z" transform="translate(-305.28 -284.37)"/><path d="M453.24,309.56h7.23q-2-3.81-4-7.56h0C455.37,304.52,454.3,307,453.24,309.56Z" transform="translate(-305.28 -284.37)"/><path d="M468.18,309.56v-7.4l-2.05-.16h-9.7q2.07,3.75,4,7.56Z" transform="translate(-305.28 -284.37)"/><path d="M449.19,319.28c-1.07,2.59-2.11,5.19-3.14,7.8h10.29c-2.23-2.62-4.43-5.23-6.67-7.8Z" transform="translate(-305.28 -284.37)"/><path d="M465.26,319.28H449.67c2.24,2.57,4.44,5.18,6.67,7.8h12.44C467.65,324.47,466.47,321.87,465.26,319.28Z" transform="translate(-305.28 -284.37)"/><path d="M471.54,327.08v-7.8h-6.28c1.21,2.59,2.39,5.19,3.52,7.8Z" transform="translate(-305.28 -284.37)"/><path d="M448.68,300.68l-9.66-.74v8.28a127.79,127.79,0,0,1,9.66,9.94v-8.6h4.56c1.06-2.52,2.13-5,3.18-7.56h-7.74Z" transform="translate(-305.28 -284.37)"/><path d="M448.68,318.16a127.79,127.79,0,0,0-9.66-9.94v18.86h7c1-2.61,2.07-5.21,3.14-7.8h-.51Z" transform="translate(-305.28 -284.37)"/><path d="M479.28,303v5.71c1.26-1.83,2.53-3.65,3.8-5.44Z" transform="translate(-305.28 -284.37)"/><path d="M488.88,303.66l-5.8-.41c-1.27,1.79-2.54,3.61-3.8,5.44v14.69a93,93,0,0,1,9.6-3.75Z" transform="translate(-305.28 -284.37)"/><path d="M479.28,323.38v3.7h9.6v-7.45A93,93,0,0,0,479.28,323.38Z" transform="translate(-305.28 -284.37)"/><path d="M487.32,285.08H484q2.67,4.76,5.49,9.43c.89-1.19,1.78-2.37,2.69-3.55Z" transform="translate(-305.28 -284.37)"/><path d="M503.35,304.67,492.13,291c-.91,1.18-1.8,2.36-2.69,3.55q2.91,4.85,6,9.61Z" transform="translate(-305.28 -284.37)"/><path d="M484,285.08h-4.67V303l3.8.27q3.14-4.42,6.36-8.74Q486.62,289.83,484,285.08Z" transform="translate(-305.28 -284.37)"/><path d="M483.08,303.25l5.8.41v-2.08l1.81,2.21,4.73.33q-3.07-4.77-6-9.61Q486.22,298.83,483.08,303.25Z" transform="translate(-305.28 -284.37)"/><path d="M517.8,285.08h-9.6v3.29q4.51,7.63,9.6,15.05Z" transform="translate(-305.28 -284.37)"/><path d="M508.2,288.37V305l9.6.62v-2.2Q512.73,296,508.2,288.37Z" transform="translate(-305.28 -284.37)"/><path d="M508.2,310.58l-4.85-5.91-7.93-.55c2.41,3.76,4.9,7.49,7.43,11.19a90.75,90.75,0,0,0,14.95-5.9v-3.79l-9.6-.62Z" transform="translate(-305.28 -284.37)"/><path d="M511.16,327.08h6.64V309.41a90.75,90.75,0,0,1-14.95,5.9Q506.93,321.25,511.16,327.08Z" transform="translate(-305.28 -284.37)"/><path d="M500.69,316l9.13,11.11h1.34q-4.23-5.83-8.31-11.77Z" transform="translate(-305.28 -284.37)"/><path d="M495.42,304.12l-4.73-.33,10,12.18,2.16-.66C500.32,311.61,497.83,307.88,495.42,304.12Z" transform="translate(-305.28 -284.37)"/><path d="M546.87,285.09h-3.18l.12,1.62Z" transform="translate(-305.28 -284.37)"/><path d="M543.69,285.08H527.76v11.78a113.13,113.13,0,0,1,16-10.16Z" transform="translate(-305.28 -284.37)"/><path d="M537.48,293.06h7.1c-.34-2.11-.59-4.23-.77-6.36a113.13,113.13,0,0,0-16,10.16v9.41l9.72.58Z" transform="translate(-305.28 -284.37)"/><path d="M546.87,285.09l-3.06,1.61c.18,2.13.43,4.25.77,6.36h1.78c6.54,0,11.29,3.08,13,8.28q2.91-4.43,5.77-8.88C561.1,287.79,554.69,285.09,546.87,285.09Z" transform="translate(-305.28 -284.37)"/><path d="M559.41,301.34a14.82,14.82,0,0,1,.75,4.74,16.92,16.92,0,0,1-.14,2.05l9.84.5c.08-.83.14-1.67.14-2.55a20.28,20.28,0,0,0-4.82-13.62Q562.32,296.92,559.41,301.34Z" transform="translate(-305.28 -284.37)"/><path d="M527.76,327.08h8q-4.08-4.87-8-9.95Z" transform="translate(-305.28 -284.37)"/><path d="M550.66,318.6c2.48,2.06,5,4.12,7.57,6.18a19.38,19.38,0,0,0,11.63-16.15l-9.84-.5A11.85,11.85,0,0,1,550.66,318.6Z" transform="translate(-305.28 -284.37)"/><path d="M546.36,319.1h-8.88V306.85l-9.72-.58v10.86q3.9,5.07,8,9.95h5.74q3-4,5.84-8Z" transform="translate(-305.28 -284.37)"/><path d="M547.33,319.08q-2.87,4-5.84,8h5.35a27.46,27.46,0,0,0,11.39-2.3c-2.55-2.06-5.09-4.12-7.57-6.18A17.46,17.46,0,0,1,547.33,319.08Z" transform="translate(-305.28 -284.37)"/>
          </svg>
        </NavLink>
        <NavLink to="/contact" className="cta">Let's talk</NavLink>
      </div>
      <div className="navbar__menu">
        <input type="checkbox" className="toggler" checked={checked} onChange={ _toggleCheckbox}/>
        <div className="hamburger"><div></div></div>
        { checked ? <Menu dropped={checked} toggle={_toggleCheckbox}/> :  <Menu dropped={checked}/>}
      </div>
    </div>
  )
};
export default Navbar;